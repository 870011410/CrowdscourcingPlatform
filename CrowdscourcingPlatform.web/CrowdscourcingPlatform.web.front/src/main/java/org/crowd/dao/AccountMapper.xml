<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.crowd.dao.AccountMapper">

	<resultMap type="org.crowd.model.dto.AccountDetaDto" id="accountDetaDtoResultMap">
		<result column="U_NAME" property="useName" />
		<result column="PRO_NAME" property="serName" />
		<result column="LEA_NAME" property="leaName" />
		<result column="WOR_TITLE" property="worTitle" />
		<result column="NEE_TITLE" property="neeTitle" />
		<result column="ACC_MONEY" property="money" />
		<result column="ACC_UPDATE" property="updateTime" />
		<result column="ACC_ID" property="id" />
		<result column="ACC_STATE" property="state" />
	</resultMap>

	<select id="countBuyerAccounts" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM ( SELECT U.USE_NAME U_NAME,US.USE_NAME PRO_NAME,
		L.LEA_NAME,W.WOR_TITLE,N.NEE_TITLE ,A.* FROM
		T_ACCOUNTS A INNER JOIN T_USER U
		ON U.USE_ID = A.ACC_USE_ID AND A.ACC_USE_ID = #{useId}
		<if test="time_from != null and time_from !='' ">
			AND TO_CHAR(A.ACC_UPDATE_TIME,'YYYY-MM-DD')&gt;= #{time_from} AND
			TO_CHAR(A.ACC_UPDATE_TIME,'YYYY-MM-DD')&lt;= #{time_to}
		</if>
		LEFT JOIN T_USER US ON A.ACC_PRO_ID = US.USE_ID
		LEFT JOIN T_NEED N ON A.ACC_NEE_ID = N.NEE_ID
		LEFT JOIN T_WORKS W ON
		A.ACC_WOR_ID = W.WOR_ID
		LEFT JOIN T_LEAGUE L ON A.ACC_LEA_ID = L.LEA_ID
		) WHERE ( PRO_NAME LIKE
		CONCAT(CONCAT('%',#{name}),'%') OR LEA_NAME LIKE CONCAT(CONCAT('%',#{name}),'%') )
		AND (
		NEE_TITLE LIKE
		CONCAT(CONCAT('%',#{title}),'%') OR WOR_TITLE LIKE CONCAT(CONCAT('%',#{title}),'%') )
	</select>

	<select id="showBuyerAccounts" resultMap="accountDetaDtoResultMap">
		SELECT * FROM ( SELECT U.USE_NAME U_NAME,US.USE_NAME PRO_NAME,
		L.LEA_NAME,W.WOR_TITLE,N.NEE_TITLE ,A.* FROM
		T_ACCOUNTS A
		INNER JOIN T_USER U
		ON U.USE_ID = A.ACC_USE_ID AND A.ACC_USE_ID = #{useId}
		<if test="time_from != null and time_from !='' ">
			AND TO_CHAR(A.ACC_UPDATE_TIME,'YYYY-MM-DD')&gt;= #{time_from} AND
			TO_CHAR(A.ACC_UPDATE_TIME,'YYYY-MM-DD')&lt;= #{time_to}
		</if>
		LEFT JOIN T_USER US ON A.ACC_PRO_ID = US.USE_ID
		LEFT JOIN T_NEED N ON A.ACC_NEE_ID = N.NEE_ID
		LEFT JOIN T_WORKS W ON
		A.ACC_WOR_ID = W.WOR_ID
		LEFT JOIN T_LEAGUE L ON A.ACC_LEA_ID = L.LEA_ID
		) WHERE (PRO_NAME LIKE
		CONCAT(CONCAT('%',#{name}),'%') OR LEA_NAME LIKE CONCAT(CONCAT('%',#{name}),'%') )
		AND ( NEE_TITLE
		LIKE
		CONCAT(CONCAT('%',#{title}),'%') OR WOR_TITLE LIKE CONCAT(CONCAT('%',#{title}),'%') )
	</select>

	<select id="countProviderAccounts" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM ( SELECT U.USE_NAME U_NAME,US.USE_NAME PRO_NAME,
		L.LEA_NAME,W.WOR_TITLE,N.NEE_TITLE,A.*
		FROM
		T_ACCOUNTS A INNER JOIN T_USER U
		ON (U.USE_ID = A.ACC_PRO_ID AND  A.ACC_USE_ID=#{useId} ) 
   		OR (U.USE_ID = A.ACC_USE_ID AND  A.ACC_PRO_ID=#{useId} )
		<if test="time_from != null and time_from !='' ">
			AND TO_CHAR(A.ACC_UPDATE,'YYYY-MM-DD')&gt;= #{time_from} AND
			TO_CHAR(A.ACC_UPDATE,'YYYY-MM-DD')&lt;=
			#{time_to}
		</if>
		LEFT JOIN T_USER US ON A.ACC_USE_ID = US.USE_ID
		LEFT JOIN T_NEED N ON A.ACC_NEE_ID = N.NEE_ID
		LEFT JOIN T_WORKS W ON
		A.ACC_WOR_ID = W.WOR_ID
		LEFT JOIN T_LEAGUE L ON A.ACC_LEA_ID = L.LEA_ID
		) WHERE (U_NAME LIKE
		CONCAT(CONCAT('%',#{name}),'%'))
		AND (NEE_TITLE LIKE
		CONCAT(CONCAT('%',#{title}),'%') OR WOR_TITLE LIKE
		CONCAT(CONCAT('%',#{title}),'%'))
	</select>

	<select id="showProviderAccounts" resultMap="accountDetaDtoResultMap">
		SELECT * FROM ( SELECT U.USE_NAME U_NAME,US.USE_NAME PRO_NAME,
		L.LEA_NAME,W.WOR_TITLE,N.NEE_TITLE,A.*
		FROM
		T_ACCOUNTS A
		INNER JOIN T_USER U
		ON (U.USE_ID = A.ACC_PRO_ID AND  A.ACC_USE_ID=#{useId} ) 
   		OR (U.USE_ID = A.ACC_USE_ID AND  A.ACC_PRO_ID=#{useId} )
		<if test="time_from != null and time_from !='' ">
			AND TO_CHAR(A.ACC_UPDATE,'YYYY-MM-DD')&gt;= #{time_from} AND
			TO_CHAR(A.ACC_UPDATE,'YYYY-MM-DD')&lt;=
			#{time_to}
		</if>
		LEFT JOIN T_USER US ON A.ACC_USE_ID = US.USE_ID
		LEFT JOIN T_NEED N ON A.ACC_NEE_ID = N.NEE_ID
		LEFT JOIN T_WORKS W ON
		A.ACC_WOR_ID = W.WOR_ID
		LEFT JOIN T_LEAGUE L ON A.ACC_LEA_ID = L.LEA_ID
		) WHERE (U_NAME LIKE
		CONCAT(CONCAT('%',#{name}),'%'))
		AND (NEE_TITLE LIKE
		CONCAT(CONCAT('%',#{title}),'%') OR WOR_TITLE LIKE
		CONCAT(CONCAT('%',#{title}),'%') )
	</select>

	<update id="payAccount">
		UPDATE T_ACCOUNTS A SET A.ACC_STATE=1 WHERE A.ACC_ID=#{id}
	</update>


<!-- 添加一个账务信息 -->
  <insert id="addAccount">
INSERT INTO T_ACCOUNTS (ACC_ID,ACC_USE_ID,ACC_PRO_ID,ACC_LEA_ID,ACC_NEE_ID,ACC_WOR_ID,ACC_MONEY,ACC_STATE,ACC_MEMO,ACC_CREATE_TIME,ACC_UPDATE)
       VALUES (SEQ_ACC.NEXTVAL,#{useId},#{proId},#{leaId},#{neeId},
       #{worId},#{money},#{state},#{memo},SYSDATE,SYSDATE)

  </insert>
  
  <!-- 修改账务信息 -->
  <update id="okAccount">
	UPDATE T_ACCOUNTS SET ACC_STATE=1,ACC_UPDATE=SYSDATE WHERE ACC_ID=(SELECT MAX(ACC_ID) FROM 
	T_ACCOUNTS WHERE ACC_WOR_ID=#{workId} AND ACC_STATE=2)

  </update>
 
</mapper> 